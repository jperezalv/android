import org.apache.tools.ant.taskdefs.condition.Os


apply plugin: 'com.android.library'


android {
    compileSdkVersion 22
    buildToolsVersion "21.1.2"

    sourceSets {
        main {
            jni.srcDirs = ['ogg/src', 'flac/src/libFLAC', 'jni']
            //jniLibs.srcDir 'src/main/libs' //set .so files location to libs
            //jni.srcDirs = [] //disable automatic ndk-build call
        }
    }

//    productFlavors {
//        x86 {
//            ndk {
//                abiFilter "x86"
//            }
//        }
//        mips {
//            ndk {
//                abiFilter "mips"
//            }
//        }
//        armv7 {
//            ndk {
//                abiFilter "armeabi-v7a"
//            }
//        }
//        arm {
//            ndk {
//                abiFilter "armeabi"
//            }
//        }
//        fat
//    }

// call regular ndk-build(.cmd) script from app directory
//    task ndkBuild(type: Exec) {
//        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
//            commandLine 'ndk-build.cmd', '-C', file('jni').absolutePath
//        } else {
//            commandLine 'ndk-build', '-C', file('jni').absolutePath
//        }
//    }
//
//    tasks.withType(JavaCompile) {
//        compileTask -> compileTask.dependsOn ndkBuild
//    }

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}


buildscript {
    repositories {
        maven {
            url "http://repo1.maven.org/maven2/"
        }
    }

    dependencies {
        classpath group: 'net.sourceforge.fmpp', name: 'fmpp', version: '0.9.15'
    }

    ant.taskdef(name: 'fmpp', classname:'fmpp.tools.AntTask', classpath: buildscript.configurations.classpath.asPath)
}

task genSources << {
    println "Generating sources...."
//    ant.fmpp configuration:"src/main/resources/codegen/config.fmpp",
//            sourceRoot:"src/main/resources/codegen/templates",
//            outputRoot:"target/generated-sources/main/java";
}
tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn genSources
}

sourceSets {
    main {
        java {
            srcDir 'target/generated-sources/main/java'
        }
    }
}

gradle.projectsEvaluated {
    preBuild.dependsOn genSources
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar', '*.so'])
}

// http://tools.android.com/tech-docs/new-build-system/tips#TOC-Improving-Build-Server-performance.
project.ext.preDexLibs = !project.hasProperty('disablePreDex')
subprojects {
    project.plugins.whenPluginAdded { plugin ->
        if ("com.android.build.gradle.AppPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        } else if ("com.android.build.gradle.LibraryPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        }
    }
}


